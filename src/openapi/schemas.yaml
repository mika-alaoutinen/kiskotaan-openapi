# New objects received from client (without IDs):
NewCourseResource:
  type: object
  description: A new disc golf course without ID.
  discriminator:
    propertyName: id
  required: [ name, par ]
  properties:
    name:
      type: string
    par:
      type: number

NewPlayerResource:
  type: object
  description: A new player without ID.
  discriminator:
    propertyName: id
  required: [ name ]
  properties:
    name:
      type: string

NewScoreCardResource:
  type: object
  description: A new  score card with selected course and players.
  discriminator:
    propertyName: id
  required: [ course, players ]
  properties:
    course:
      $ref: "#/CourseResource"
    players:
      type: array
      items:
        $ref: "#/PlayerResource"

# Schemas returned by server:
CourseResource:
  allOf:
    - $ref: "#/NewCourseResource"
  description: A disc golf course.
  required: [ id ]
  properties:
    id:
      type: string

ErrorResource:
  type: object
  description: An error resource with a HTTP error code and a message.
  required: [ code, message ]
  properties:
    code:
      type: string
    message:
      type: string

GameResource:
  type: object
  description: Object for persisting the state of a game; that is, a round of disc golf.
  required: [ id, hasScoreChanged, hole, isOver, scoreCardId ]
  properties:
    id:
      type: string
    hasScoreChanged:
      type: boolean
    hole:
      type: number
    isOver:
      type: boolean
    scoreCardId:
      type: string
    
HoleResource:
  type: object
  description: A hole in a disc golf course.
  required: [ number, par ]
  properties:
    number:
      type: number
    par:
      type: number
    distance:
      type: number

PlayerResource:
  allOf:
    - $ref: "#/NewPlayerResource"
  description: A player returned from backend, who has an ID.
  required: [ id ]
  properties:
    id:
      type: string

ScoreCardResource:
  allOf:
    - $ref: "#/NewScoreCardResource"
  description: A score card for tracking scores for a group of players.
  required: [ id ]
  properties:
    id:
      type: string
    rows:
      type: array
      items:
        $ref: "#/ScoreRowResource"

ScoreCardIdResource:
  type: object
  description: An ID for a scorecard.
  required: [ scoreCardId ]
  properties:
    scoreCardId:
      type: string
    
ScoreRowResource:
  type: object
  description: The scores for a single hole.
  required: [ hole, scores ]
  properties:
    hole:
      type: number
    scores:
      type: array
      items:
        $ref: "#/ScoreResource"

ScoreResource:
  type: object
  description: A score for a player
  required: [ playerId, score ]
  properties:
    playerId:
      type: string
    score:
      type: number